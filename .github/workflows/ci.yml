name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@master

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --immutable

      - name: Lint
        run: yarn lint

      - name: Sync
        run: yarn sync

      - name: Build
        run: yarn build

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            modules:
              - 'modules/**'
              - 'lib/**'

      - name: Release
        if: github.event_name == 'push' && steps.changes.outputs.modules == 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" >> ~/.npmrc
          echo "//registry.yarnpkg.com/:_authToken=$NPM_AUTH_TOKEN" >> ~/.npmrc
          yarn release
        env:
          NPM_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
